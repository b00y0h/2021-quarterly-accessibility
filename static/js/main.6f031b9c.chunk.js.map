{"version":3,"sources":["index.js"],"names":["theme","fonts","header","text","template","justifyContent","position","bottom","width","padding","SlideFragments","Presentation","height","size","flexDirection","margin","fontSize","color","transition","from","transform","opacity","enter","leave","backgroundColor","backgroundImage","backgroundOpacity","priority","fontWeight","gridTemplateColumns","gridColumnGap","gridTemplateRows","alignItems","gridRowGap","Array","fill","map","_","index","paddingTop","flex","src","language","showLineNumbers","componentProps","animateListItems","textAlign","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6f031b9c.chunk.js","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport {\n  FlexBox,\n  Heading,\n  SpectacleLogo,\n  UnorderedList,\n  CodeSpan,\n  OrderedList,\n  ListItem,\n  FullScreen,\n  Progress,\n  Appear,\n  Stepper,\n  Slide,\n  Deck,\n  Text,\n  Grid,\n  Box,\n  Image,\n  CodePane,\n  MarkdownSlide,\n  MarkdownSlideSet,\n  Notes,\n} from \"spectacle\";\n\nconst formidableLogo =\n  \"https://avatars2.githubusercontent.com/u/5078602?s=280&v=4\";\n\n// SPECTACLE_CLI_THEME_START\nconst theme = {\n  fonts: {\n    header: '\"Open Sans Condensed\", Helvetica, Arial, sans-serif',\n    text: '\"Open Sans Condensed\", Helvetica, Arial, sans-serif',\n  },\n};\n// SPECTACLE_CLI_THEME_END\n\n// SPECTACLE_CLI_TEMPLATE_START\nconst template = () => (\n  <FlexBox\n    justifyContent=\"space-between\"\n    position=\"absolute\"\n    bottom={0}\n    width={1}\n  >\n    <Box padding=\"0 1em\">\n      <FullScreen />\n    </Box>\n    <Box padding=\"1em\">\n      <Progress />\n    </Box>\n  </FlexBox>\n);\n// SPECTACLE_CLI_TEMPLATE_END\n\nconst SlideFragments = () => (\n  <>\n    <Slide>\n      <Text>This is a slide fragment.</Text>\n    </Slide>\n    <Slide>\n      <Text>This is also a slide fragment.</Text>\n      <Appear>\n        <Text>This item shows up!</Text>\n      </Appear>\n      <Appear>\n        <Text>This item also shows up!</Text>\n      </Appear>\n    </Slide>\n  </>\n);\n\nconst Presentation = () => (\n  <Deck theme={theme} template={template}>\n    <Slide>\n      <FlexBox height=\"100%\">\n        <SpectacleLogo size={500} />\n      </FlexBox>\n      <Notes>\n        Spectacle supports notes per slide.\n        <ol>\n          <li>Notes can now be HTML markup!</li>\n          <li>Lists can make it easier to make points.</li>\n        </ol>\n      </Notes>\n    </Slide>\n    <Slide>\n      <FlexBox height=\"100%\" flexDirection=\"column\">\n        <Heading margin=\"0px\" fontSize=\"150px\">\n          ✨<i>Spectacle</i> ✨\n        </Heading>\n        <Heading margin=\"0px\" fontSize=\"h2\">\n          A ReactJS Presentation Library\n        </Heading>\n        <Heading margin=\"0px 32px\" color=\"primary\" fontSize=\"h3\">\n          Where you can write your decks in JSX, Markdown, or MDX!\n        </Heading>\n      </FlexBox>\n    </Slide>\n    <Slide\n      transition={{\n        from: {\n          transform: \"scale(0.5) rotate(45deg)\",\n          opacity: 0,\n        },\n        enter: {\n          transform: \"scale(1) rotate(0)\",\n          opacity: 1,\n        },\n        leave: {\n          transform: \"scale(0.2) rotate(315deg)\",\n          opacity: 0,\n        },\n      }}\n      backgroundColor=\"tertiary\"\n      backgroundImage=\"url(https://github.com/FormidableLabs/dogs/blob/main/src/beau.jpg?raw=true)\"\n      backgroundOpacity={0.5}\n    >\n      <Heading>Custom Backgrounds</Heading>\n      <UnorderedList>\n        <ListItem>\n          <CodeSpan>backgroundColor</CodeSpan>\n        </ListItem>\n        <ListItem>\n          <CodeSpan>backgroundImage</CodeSpan>\n        </ListItem>\n        <ListItem>\n          <CodeSpan>backgroundOpacity</CodeSpan>\n        </ListItem>\n        <ListItem>\n          <CodeSpan>backgroundSize</CodeSpan>\n        </ListItem>\n        <ListItem>\n          <CodeSpan>backgroundPosition</CodeSpan>\n        </ListItem>\n        <ListItem>\n          <CodeSpan>backgroundRepeat</CodeSpan>\n        </ListItem>\n      </UnorderedList>\n    </Slide>\n    <Slide>\n      <Heading>Animated Elements</Heading>\n      <OrderedList>\n        <Appear>\n          <ListItem>Elements can animate in!</ListItem>\n        </Appear>\n        <Appear>\n          <ListItem>Out of order</ListItem>\n        </Appear>\n        <Appear priority={0}>\n          <ListItem>\n            Just identify the order with the prop <CodeSpan>priority</CodeSpan>!\n          </ListItem>\n        </Appear>\n      </OrderedList>\n    </Slide>\n    <Slide>\n      <FlexBox>\n        <Text>These</Text>\n        <Text>Text</Text>\n        <Text color=\"secondary\">Items</Text>\n        <Text fontWeight=\"bold\">Flex</Text>\n      </FlexBox>\n      <Grid gridTemplateColumns=\"1fr 2fr\" gridColumnGap={15}>\n        <Box backgroundColor=\"primary\">\n          <Text color=\"secondary\">Single-size Grid Item</Text>\n        </Box>\n        <Box backgroundColor=\"secondary\">\n          <Text>Double-size Grid Item</Text>\n        </Box>\n      </Grid>\n      <Grid\n        gridTemplateColumns=\"1fr 1fr 1fr\"\n        gridTemplateRows=\"1fr 1fr 1fr\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n        gridRowGap={1}\n      >\n        {Array(9)\n          .fill(\"\")\n          .map((_, index) => (\n            <FlexBox paddingTop={0} key={`formidable-logo-${index}`} flex={1}>\n              <Image src={formidableLogo} width={100} />\n            </FlexBox>\n          ))}\n      </Grid>\n    </Slide>\n    <SlideFragments />\n    <Slide>\n      <CodePane language=\"jsx\">{`\n        import { createClient, Provider } from 'urql';\n\n        const client = createClient({ url: 'https://0ufyz.sse.codesandbox.io' });\n\n        const App = () => (\n          <Provider value={client}>\n            <Todos />\n          </Provider>\n        );\n        `}</CodePane>\n      <Box height={20} />\n      <CodePane language=\"java\" showLineNumbers={false}>{`\n        public class NoLineNumbers {\n          public static void main(String[] args) {\n            System.out.println(\"Hello\");\n          }\n        }\n        `}</CodePane>\n    </Slide>\n    <div>\n      <Slide>\n        <Heading>This is a slide embedded in a div</Heading>\n      </Slide>\n    </div>\n    <MarkdownSlide componentProps={{ color: \"yellow\" }}>\n      {`\n        # This is a Markdown Slide\n\n        - You can pass props down to all elements on the slide.\n        - Just use the \\`componentProps\\` prop.\n        `}\n    </MarkdownSlide>\n    <MarkdownSlide animateListItems>\n      {`\n       # This is also a Markdown Slide\n\n       It uses the \\`animateListItems\\` prop.\n\n       - Its list items...\n       - ...will appear...\n       - ...one at a time.\n      `}\n    </MarkdownSlide>\n    <Slide>\n      <Grid\n        flex={1}\n        gridTemplateColumns=\"50% 50%\"\n        gridTemplateRows=\"50% 50%\"\n        height=\"100%\"\n      >\n        <FlexBox alignItems=\"center\" justifyContent=\"center\">\n          <Heading>This is a 4x4 Grid</Heading>\n        </FlexBox>\n        <FlexBox alignItems=\"center\" justifyContent=\"center\">\n          <Text textAlign=\"center\">\n            With all the content aligned and justified center.\n          </Text>\n        </FlexBox>\n        <FlexBox alignItems=\"center\" justifyContent=\"center\">\n          <Text textAlign=\"center\">\n            It uses Spectacle <CodeSpan>{\"<Grid />\"}</CodeSpan> and{\" \"}\n            <CodeSpan>{\"<FlexBox />\"}</CodeSpan> components.\n          </Text>\n        </FlexBox>\n        <FlexBox alignItems=\"center\" justifyContent=\"center\">\n          <Box width={200} height={200} backgroundColor=\"secondary\" />\n        </FlexBox>\n      </Grid>\n    </Slide>\n    <MarkdownSlideSet>\n      {`\n        # This is the first slide of a Markdown Slide Set\n        ---\n        # This is the second slide of a Markdown Slide Set\n        `}\n    </MarkdownSlideSet>\n  </Deck>\n);\n\nReactDOM.render(<Presentation />, document.getElementById(\"root\"));\n"],"sourceRoot":""}